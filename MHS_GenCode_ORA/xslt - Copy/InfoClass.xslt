<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:dateTimeObj="urn:xsltExtension-DateTime">
	<xsl:output omit-xml-declaration="yes" indent="no" method="text" encoding="UTF-8"/>
	<xsl:template match="/">
'' =============================================
'' This class is generated by TuấnNA2
'' Author:	Nguyễn Anh Tuấn
'' Create date:	<xsl:value-of select="dateTimeObj:GetDateTime('dd/MM/yyyy HH:mm')" />
'' Description:	The properties of <xsl:value-of select="entity/@tableName"/> object
'' Revise History:	
'' =============================================

Public class <xsl:value-of select="entity/@tableName"/>_Info
	Inherits InfoBase
	<xsl:apply-templates select="entity/columns" mode="Private"/>
	public sub New()

	End sub
	<xsl:apply-templates select="entity/columns" mode="Property"/>
End Class

</xsl:template>

<!--danh sach bien private-->
<xsl:template match="entity/columns" mode="Private">
	<xsl:for-each select="property">
		<xsl:choose>
      <xsl:when test="@dataType='nvarchar' or @dataType='varchar' or @dataType='char' or @dataType='nchar'">
        Private _<xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/>
      </xsl:when>
			<xsl:when test="@dataType='image'">
				Private _<xsl:value-of select="@columnName"/> As Byte()
      </xsl:when>
			<xsl:otherwise>
				<xsl:choose>
					<xsl:when test="@allowNull='True'">
						Private _<xsl:value-of select="@columnName"/> as Nullable(Of <xsl:value-of select="@vbDataType"/>)
					</xsl:when>
					<xsl:otherwise>
						Private _<xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:for-each>
</xsl:template>

<!--danh sach property-->
<xsl:template match="entity/columns" mode="Property">

	<xsl:for-each select="property">
		<xsl:choose>
      <xsl:when test="@dataType='nvarchar' or @dataType='varchar' or @dataType='char' or @dataType='nchar'">
        Public Property <xsl:value-of select="@columnName"/>() as <xsl:value-of select="@vbDataType"/>
        Get
        Return _<xsl:value-of select="@columnName"/>
        End Get
        Set(ByVal Value as <xsl:value-of select="@vbDataType"/>)
        _<xsl:value-of select="@columnName"/> = Value
        End Set
        End Property
      </xsl:when>
			<xsl:when test="@dataType='image'">
				Public Property <xsl:value-of select="@columnName"/>() As Byte()
				Get
					Return _<xsl:value-of select="@columnName"/>
				End Get
				Set(ByVal Value As Byte())
					_<xsl:value-of select="@columnName"/> = Value
				End Set
				End Property
			</xsl:when>
			<xsl:otherwise>
				<xsl:choose>
					<xsl:when test="@allowNull='True'">						
						Public Property <xsl:value-of select="@columnName"/>() as Nullable(Of <xsl:value-of select="@vbDataType"/>)
						Get
							Return _<xsl:value-of select="@columnName"/>
						End Get
						Set(ByVal Value as Nullable(Of <xsl:value-of select="@vbDataType"/>))
							_<xsl:value-of select="@columnName"/> = Value
						End Set
						End Property
					</xsl:when>
					<xsl:otherwise>
						Public Property <xsl:value-of select="@columnName"/>() as <xsl:value-of select="@vbDataType"/>
						Get
							Return _<xsl:value-of select="@columnName"/>
						End Get
						Set(ByVal Value as <xsl:value-of select="@vbDataType"/>)
							_<xsl:value-of select="@columnName"/> = Value
						End Set
						End Property
					</xsl:otherwise>
				</xsl:choose>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:for-each>	
</xsl:template>


<xsl:template match="entity/columns" mode="PrivateKey">
	<xsl:for-each select="property[@isPK='True']">
		Private _<xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/>
	</xsl:for-each>
</xsl:template>


<xsl:template match="entity/columns" mode="PramKey">

	<xsl:for-each select="property[@isPK='True']">
		<xsl:choose>
			<xsl:when test="position()>1">, </xsl:when>
		</xsl:choose>Byval <xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/> _
	</xsl:for-each>
</xsl:template>

<xsl:template match="entity/columns" mode="PropertyKey">

	<xsl:for-each select="property[@isPK='True']">
	Public Property <xsl:value-of select="@columnName"/>() as <xsl:value-of select="@vbDataType"/>
		Get
			Return _<xsl:value-of select="@columnName"/>
		End Get
		Set(ByVal Value as <xsl:value-of select="@vbDataType"/>)
			_<xsl:value-of select="@columnName"/> = Value
		End Set
	End Property
	</xsl:for-each>
</xsl:template>
	
<xsl:template match="entity/columns" mode="GetKey">
	<xsl:for-each select="property[@isPK='True']">
	_<xsl:value-of select="@columnName"/> = <xsl:value-of select="@columnName"/>
	</xsl:for-each>
</xsl:template>	
</xsl:stylesheet>
