<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:dateTimeObj="urn:xsltExtension-DateTime">
	<xsl:output omit-xml-declaration="yes" indent="no" method="text" encoding="UTF-8"/>
	<xsl:template match="/">
'' =============================================
'' This class is generated by BuildProject 
'' Author:	<xsl:value-of select="entity/@author"/>
'' Create date:	<xsl:value-of select="dateTimeObj:GetDateTime('dd/MM/yyyy HH:mm')" />
'' Description:	
'' Revise History:	
'' =============================================
Public Class <xsl:value-of select="entity/@tableName"/>_Obj<xsl:apply-templates select="entity/columns" mode="Private"/>
	Public Sub New()

	End Sub
	<xsl:apply-templates select="entity/columns" mode="Property"/>
End Class

Public Class <xsl:value-of select="entity/@tableName"/>_ObjKey<xsl:apply-templates select="entity/columns" mode="PrivateKey"/>    
    
	Public Sub New()
    End Sub
    
    Public Sub New( _ 
    <xsl:apply-templates select="entity/columns" mode="PramKey"/> )
        <xsl:apply-templates select="entity/columns" mode="GetKey"/>
    End Sub
    
	<xsl:apply-templates select="entity/columns" mode="PropertyKey"/>

End Class

Public Class <xsl:value-of select="entity/@tableName"/>_ObjKeys

    Private _Obj As List(Of <xsl:value-of select="entity/@tableName"/>_ObjKey)

    Sub New()
        Me._Obj = New List(Of <xsl:value-of select="entity/@tableName"/>_ObjKey)
    End Sub

    Sub AddKey(ByVal info As <xsl:value-of select="entity/@tableName"/>_ObjKey)
        Me._Obj.Add(info)
    End Sub

    Public Sub RemoveKey(ByVal param As <xsl:value-of select="entity/@tableName"/>_ObjKey)
        _Obj.Remove(param)
    End Sub

    Public Sub RemoveKeyAt(ByVal index As Integer)
        _Obj.RemoveAt(index)
    End Sub

    Public Sub RemoveKeyRange(ByVal index As Integer, ByVal count As Integer)
        _Obj.RemoveRange(index, count)
    End Sub

    Public Property Keys() As List(Of <xsl:value-of select="entity/@tableName"/>_ObjKey)
        Get
            Return _Obj
        End Get
        Set(ByVal value As List(Of <xsl:value-of select="entity/@tableName"/>_ObjKey))
            _Obj = value
        End Set
    End Property
End Class

</xsl:template>

<!--danh sach bien private-->
<xsl:template match="entity/columns" mode="Private">
	<xsl:for-each select="property">
	Private _<xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/>
	</xsl:for-each>
</xsl:template>

<!--danh sach property-->
<xsl:template match="entity/columns" mode="Property">
	<xsl:for-each select="property">
	Public Property <xsl:value-of select="@columnName"/>() as <xsl:value-of select="@vbDataType"/>
		Get
			Return _<xsl:value-of select="@columnName"/>
		End Get
		Set(ByVal Value as <xsl:value-of select="@vbDataType"/>)
			_<xsl:value-of select="@columnName"/> = Value
		End Set
	End Property
	</xsl:for-each>
</xsl:template>


<xsl:template match="entity/columns" mode="PrivateKey">
	<xsl:for-each select="property[@isPK='True']">
	Private _<xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/>
	</xsl:for-each>
</xsl:template>


<xsl:template match="entity/columns" mode="PramKey">

	<xsl:for-each select="property[@isPK='True']">
		<xsl:choose>
			<xsl:when test="position()>1">, </xsl:when>
		</xsl:choose>Byval <xsl:value-of select="@columnName"/> as <xsl:value-of select="@vbDataType"/> _
	</xsl:for-each>
</xsl:template>

<xsl:template match="entity/columns" mode="PropertyKey">

	<xsl:for-each select="property[@isPK='True']">
	Public Property <xsl:value-of select="@columnName"/>() as <xsl:value-of select="@vbDataType"/>
		Get
			Return _<xsl:value-of select="@columnName"/>
		End Get
		Set(ByVal Value as <xsl:value-of select="@vbDataType"/>)
			_<xsl:value-of select="@columnName"/> = Value
		End Set
	End Property
	</xsl:for-each>
</xsl:template>
	
<xsl:template match="entity/columns" mode="GetKey">
	<xsl:for-each select="property[@isPK='True']">
	_<xsl:value-of select="@columnName"/> = <xsl:value-of select="@columnName"/>
	</xsl:for-each>
</xsl:template>	
</xsl:stylesheet>
